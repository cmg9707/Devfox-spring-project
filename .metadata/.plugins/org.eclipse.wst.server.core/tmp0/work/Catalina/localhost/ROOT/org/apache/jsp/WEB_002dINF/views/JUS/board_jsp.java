/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.83
 * Generated at: 2023-04-14 00:55:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.JUS;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/JUS/work/DevfoxProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/DevJUS/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1672725238227L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"utf-8\" />\r\n");
      out.write("		<!-- Bootstrap ! -->\r\n");
      out.write("  		<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ\" crossorigin=\"anonymous\">\r\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <!-- Google fonts-->\r\n");
      out.write("        <link href=\"https://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("        <!-- Core theme CSS (includes Bootstrap)-->\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"/resources/css/styles.css\">\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <!-- Navigation-->\r\n");
      out.write("        <nav class=\"navbar navbar-light bg-light static-top\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <a class=\"navbar-brand\" href=\"index\">모임나라</a>\r\n");
      out.write("                <div style=\"text-align: right;\">\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		 ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("             	</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("        </nav>\r\n");
      out.write("        <!-- Header-->\r\n");
      out.write("        <header class=\"bg-dark py-5\">\r\n");
      out.write("            <div style=\"text-align: right; color: white; width: 80%;\">\r\n");
      out.write("            <div style=\"text-align: center;\">\r\n");
      out.write("            	<select id=\"selectbox\">\r\n");
      out.write("            		<option value=\"user_name\">닉네임</option>\r\n");
      out.write("            	</select>\r\n");
      out.write("            	<input type=\"text\" id=\"selectKey\" value=\"\">\r\n");
      out.write("            	<span  id=\"singUP\" style=\"display:inline-block; height:20px; width:100px;\">찾기</span>\r\n");
      out.write("            	<button type=\"button\" id=\"upbut\">추천수정렬</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </header>\r\n");
      out.write("        <!-- Section-->\r\n");
      out.write("        <section class=\"py-5\">\r\n");
      out.write("            <div class=\"container px-4 px-lg-5 mt-5\">\r\n");
      out.write("                <div class=\"row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content\" id=\"boardid\">\r\n");
      out.write("                <!-- List -->\r\n");
      out.write("                \r\n");
      out.write("                    \r\n");
      out.write("                 \r\n");
      out.write("               \r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        <!-- 버튼 -->\r\n");
      out.write("         <div id=\"oup2\">\r\n");
      out.write("				<div\r\n");
      out.write("					style=\"position: relative; min-height: 100px; margin-top: 12px; border: 1px solid #b3b3b3; box-sizing: border-box;\">\r\n");
      out.write("					<nav aria-label=\"Page navigation example\">\r\n");
      out.write("						<ul class=\"pagination justify-content-center pagination-xl\">\r\n");
      out.write("						</ul>\r\n");
      out.write("					</nav>\r\n");
      out.write("				</div>\r\n");
      out.write("		</div>\r\n");
      out.write("        <!-- Footer-->\r\n");
      out.write("        <footer class=\"py-5 bg-dark\">\r\n");
      out.write("            <div class=\"container\"><p class=\"m-0 text-center text-white\">Copyright &copy; Your Website 2023</p></div>\r\n");
      out.write("        </footer>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("var TotList = []; // 댓글 리스트  배열\r\n");
      out.write("var checkArr = []; // 인자 배열\r\n");
      out.write("var pageCount = 0; // 총 페이지\r\n");
      out.write("var startPage = 0;//시작 번호\r\n");
      out.write("var endPage =10 // 마지막 번호\r\n");
      out.write("var nowPage = 1;//현재 페이지\r\n");
      out.write("var UPbt = 0; //추천버튼 눌렀는지 확인\r\n");
      out.write("var pagination = $(\"#oup2 .pagination\");// 버튼 추가 자리\r\n");
      out.write("var prevBtn = $(\"<li class='page-item page-link' id='prevBtn'>&laquo;</li>\");\r\n");
      out.write("var nextBtn = $(\"<li class='page-item page-link' id='nextBtn'>&raquo;</li>\");//다음버튼\r\n");
      out.write("//페이지 로딩시		\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("	 	if (sessionStorage.getItem('user')  === 'undefined') { // 세션 확ㅌ인\r\n");
      out.write("			    window.location.href = 'index'; // 이동할 페이지 URL\r\n");
      out.write("			  }\r\n");
      out.write("	 \r\n");
      out.write("		 $.ajax({\r\n");
      out.write("			 url:\"boardList\",\r\n");
      out.write("			 type: \"get\",\r\n");
      out.write("			 data: {\r\n");
      out.write("	   	         nowPage: nowPage\r\n");
      out.write("	   	     },\r\n");
      out.write("	     	   success: function(data){\r\n");
      out.write("	     	   	console.log(data);\r\n");
      out.write("				// 페이지 수 계산\r\n");
      out.write("		   	     pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("		      	 console.log(pageCount);\r\n");
      out.write("	\r\n");
      out.write("	         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("	          	 setPageButtonVisibility(1, pageCount);\r\n");
      out.write("	         	\r\n");
      out.write("				 $('#reContent').val('') //댓글 등록시 댓글 등록창 초기화\r\n");
      out.write("					 RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("	       	 }\r\n");
      out.write("		 })\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("//페이지 클릭시\r\n");
      out.write(" 	$(document).on('click', '.os', function() {\r\n");
      out.write(" 		//var selecteName = $('#selectbox').val(); //select 이름\r\n");
      out.write(" 		//var selectedValue = $('#selectKey') // select 값\r\n");
      out.write(" 		\r\n");
      out.write(" 		nowPage = $(this).val();//가져온 페이지 번호\r\n");
      out.write(" 		console.log(\"현재페이지\"+nowPage)\r\n");
      out.write(" 		startPage = (nowPage - 1) * 8 //시작 번호\r\n");
      out.write(" 		//배열에서 해당 이름과 같은 값을 가진 객체를 찾아 제거\r\n");
      out.write("	    checkArr = checkArr.filter(function(item) {\r\n");
      out.write("	      return item.name !== \"nowPage\";\r\n");
      out.write("	    });\r\n");
      out.write(" 		// 현재 페이지 인자\r\n");
      out.write(" 		checkArr.push({\r\n");
      out.write(" 		      name: \"nowPage\",\r\n");
      out.write(" 		      value: nowPage,\r\n");
      out.write(" 		});\r\n");
      out.write("		if(UPbt==0){\r\n");
      out.write("			$.ajax({\r\n");
      out.write("	 			url: \"boardPage\",\r\n");
      out.write("	 			data : JSON.stringify(checkArr),\r\n");
      out.write("	 			contentType: \"application/json; charset=UTF-8\",\r\n");
      out.write("	 			type : \"post\",\r\n");
      out.write("	 			success : function(data){\r\n");
      out.write("					console.log(data.size);\r\n");
      out.write("\r\n");
      out.write("					// 페이지 수 계산\r\n");
      out.write("			        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("			        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("		         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("		            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("		         	\r\n");
      out.write("						 RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("	 			}\r\n");
      out.write("	 			\r\n");
      out.write("	 		\r\n");
      out.write("	 		})\r\n");
      out.write("		}else{\r\n");
      out.write("			checkArr = []; //배열 초기화\r\n");
      out.write("			\r\n");
      out.write("	 		\r\n");
      out.write("	 		$.ajax({\r\n");
      out.write("	 			url: \"UPpage\",\r\n");
      out.write("	 			data : {\r\n");
      out.write("	 				startPage : startPage\r\n");
      out.write("	 			},\r\n");
      out.write("	 			type : \"get\",\r\n");
      out.write("	 			success : function(data){\r\n");
      out.write("\r\n");
      out.write("					// 페이지 수 계산\r\n");
      out.write("			        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("			        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("		         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("		            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("		         	\r\n");
      out.write("					RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("	 			}\r\n");
      out.write("	 			\r\n");
      out.write("	 		\r\n");
      out.write("	 		})\r\n");
      out.write("		}\r\n");
      out.write(" 		\r\n");
      out.write(" 	})\r\n");
      out.write("	\r\n");
      out.write(" 	//찾기버튼 클릭시\r\n");
      out.write("	$(document).on('click', '#singUP', function() {\r\n");
      out.write(" 		var selecteName = $('#selectbox').val(); //select 이름\r\n");
      out.write(" 		var selectedValue = $('#selectKey').val(); // select 값\r\n");
      out.write("		nowPage = 1;\r\n");
      out.write("		startPage = (nowPage - 1) * 8 //시작 번호\r\n");
      out.write("		console.log(\"selecteName\"+selecteName);\r\n");
      out.write(" 		//배열에서 해당 이름과 같은 값을 가진 객체를 찾아 제거\r\n");
      out.write("	    checkArr = []; //배열 초기화\r\n");
      out.write("		\r\n");
      out.write(" 		// 현재 페이지 인자\r\n");
      out.write(" 		checkArr.push({\r\n");
      out.write(" 		      name: \"nowPage\",\r\n");
      out.write(" 		      value: nowPage,\r\n");
      out.write(" 		});\r\n");
      out.write("\r\n");
      out.write(" 		checkArr.push({\r\n");
      out.write(" 	 		      name: selecteName,\r\n");
      out.write(" 	 		      value: selectedValue,\r\n");
      out.write(" 	 		});\r\n");
      out.write(" 		\r\n");
      out.write(" 		$.ajax({\r\n");
      out.write(" 			url: \"boardPage\",\r\n");
      out.write(" 			data : JSON.stringify(checkArr),\r\n");
      out.write(" 			contentType: \"application/json; charset=UTF-8\",\r\n");
      out.write(" 			type : \"post\",\r\n");
      out.write(" 			success : function(data){\r\n");
      out.write("				console.log(data.size);\r\n");
      out.write("\r\n");
      out.write("				// 페이지 수 계산\r\n");
      out.write("		        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("		        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("	         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("	            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("	         	\r\n");
      out.write("				RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write(" 			}\r\n");
      out.write(" 			\r\n");
      out.write(" 		\r\n");
      out.write(" 		})\r\n");
      out.write("\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	//추천수 정렬\r\n");
      out.write("	$(document).on('click', '#upbut', function() {\r\n");
      out.write("		nowPage = 1;\r\n");
      out.write("		startPage = (nowPage - 1) * 8 //시작 번호\r\n");
      out.write("	    checkArr = []; //배열 초기화\r\n");
      out.write("	    UPbt = 1;\r\n");
      out.write(" 		\r\n");
      out.write(" 		$.ajax({\r\n");
      out.write(" 			url: \"UPpage\",\r\n");
      out.write(" 			data : {\r\n");
      out.write(" 				startPage : startPage\r\n");
      out.write(" 			},\r\n");
      out.write(" 			type : \"get\",\r\n");
      out.write(" 			success : function(data){\r\n");
      out.write("\r\n");
      out.write("				// 페이지 수 계산\r\n");
      out.write("		        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("		        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("	         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("	            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("	         	\r\n");
      out.write("				RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write(" 			}\r\n");
      out.write(" 			\r\n");
      out.write(" 		\r\n");
      out.write(" 		})\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	//전 버튼 클릭시\r\n");
      out.write("	$(document).on('click', '#prevBtn', function() {\r\n");
      out.write("\r\n");
      out.write("		nowPage = nowPage -1; // 다음페이지\r\n");
      out.write("		if(nowPage == 0){\r\n");
      out.write("			nowPage = 1;\r\n");
      out.write("		}\r\n");
      out.write("		console.log(nowPage);\r\n");
      out.write("		startPage = (nowPage - 1) * 8; //시작 번호\r\n");
      out.write("			console.log(startPage);\r\n");
      out.write("			// 현재 페이지 인자\r\n");
      out.write("	 		checkArr.push({\r\n");
      out.write("	 		      name: \"nowPage\",\r\n");
      out.write("	 		      value: nowPage,\r\n");
      out.write("	 		});	\r\n");
      out.write("		\r\n");
      out.write("			if(UPbt==0){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("		 			url: \"boardPage\",\r\n");
      out.write("		 			data : JSON.stringify(checkArr),\r\n");
      out.write("		 			contentType: \"application/json; charset=UTF-8\",\r\n");
      out.write("		 			type : \"post\",\r\n");
      out.write("		 			success : function(data){\r\n");
      out.write("						console.log(data.size);\r\n");
      out.write("\r\n");
      out.write("						// 페이지 수 계산\r\n");
      out.write("				        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("				        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("			         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("			            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("			         	\r\n");
      out.write("							 RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("		 			}\r\n");
      out.write("		 			\r\n");
      out.write("		 		\r\n");
      out.write("		 		})\r\n");
      out.write("			}else{\r\n");
      out.write("				checkArr = []; //배열 초기화\r\n");
      out.write("				\r\n");
      out.write("		 		\r\n");
      out.write("		 		$.ajax({\r\n");
      out.write("		 			url: \"UPpage\",\r\n");
      out.write("		 			data : {\r\n");
      out.write("		 				startPage : startPage\r\n");
      out.write("		 			},\r\n");
      out.write("		 			type : \"get\",\r\n");
      out.write("		 			success : function(data){\r\n");
      out.write("\r\n");
      out.write("						// 페이지 수 계산\r\n");
      out.write("				        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("				        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("			         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("			            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("			         	\r\n");
      out.write("						RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("		 			}\r\n");
      out.write("		 			\r\n");
      out.write("		 		\r\n");
      out.write("		 		})\r\n");
      out.write("			}\r\n");
      out.write("	})\r\n");
      out.write("\r\n");
      out.write("	//다음 버튼 클릭시\r\n");
      out.write("	$(document).on('click', '#nextBtn', function() {\r\n");
      out.write("\r\n");
      out.write("		nowPage = nowPage + 1; // 다음페이지\r\n");
      out.write("		if(nowPage >= pageCount){\r\n");
      out.write("			nowPage = pageCount;\r\n");
      out.write("		}\r\n");
      out.write("		console.log(nowPage);\r\n");
      out.write("		startPage = (nowPage - 1) * 8; //시작 번호\r\n");
      out.write("			console.log(startPage);\r\n");
      out.write("			\r\n");
      out.write("			// 현재 페이지 인자\r\n");
      out.write("	 		checkArr.push({\r\n");
      out.write("	 		      name: \"nowPage\",\r\n");
      out.write("	 		      value: nowPage,\r\n");
      out.write("	 		});	\r\n");
      out.write("		\r\n");
      out.write("			if(UPbt==0){\r\n");
      out.write("				$.ajax({\r\n");
      out.write("		 			url: \"boardPage\",\r\n");
      out.write("		 			data : JSON.stringify(checkArr),\r\n");
      out.write("		 			contentType: \"application/json; charset=UTF-8\",\r\n");
      out.write("		 			type : \"post\",\r\n");
      out.write("		 			success : function(data){\r\n");
      out.write("						console.log(data.size);\r\n");
      out.write("\r\n");
      out.write("						// 페이지 수 계산\r\n");
      out.write("				        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("				        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("			         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("			            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("			         	\r\n");
      out.write("							 RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("		 			}\r\n");
      out.write("		 			\r\n");
      out.write("		 		\r\n");
      out.write("		 		})\r\n");
      out.write("			}else{\r\n");
      out.write("				checkArr = []; //배열 초기화\r\n");
      out.write("				\r\n");
      out.write("		 		\r\n");
      out.write("		 		$.ajax({\r\n");
      out.write("		 			url: \"UPpage\",\r\n");
      out.write("		 			data : {\r\n");
      out.write("		 				startPage : startPage\r\n");
      out.write("		 			},\r\n");
      out.write("		 			type : \"get\",\r\n");
      out.write("		 			success : function(data){\r\n");
      out.write("\r\n");
      out.write("						// 페이지 수 계산\r\n");
      out.write("				        pageCount = Math.ceil(data.size / 8);\r\n");
      out.write("				        console.log(pageCount);\r\n");
      out.write("\r\n");
      out.write("			         	// 페이지 버튼 보이기/숨기기 처리\r\n");
      out.write("			            setPageButtonVisibility(1, pageCount);\r\n");
      out.write("			         	\r\n");
      out.write("						RList(data.startList) //목록 불러오기 함수 실행\r\n");
      out.write("		 			}\r\n");
      out.write("		 			\r\n");
      out.write("		 		\r\n");
      out.write("		 		})\r\n");
      out.write("			}\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("//글 출력\r\n");
      out.write(" 	function RList(data){\r\n");
      out.write(" 		var html = \"\";   \r\n");
      out.write("         $.each(data.slice(0, 8), function(index , item){\r\n");
      out.write("\r\n");
      out.write("        		 html += '<div class=\"col mb-5\">';\r\n");
      out.write("                 html += '<div class=\"card h-100\">'; \r\n");
      out.write("                 html += '<img class=\"card-img-top\" src=\"/img/'+item.board_poto_new+'\" alt=\"...\" style=\"width:100%; height:100%\"/>';\r\n");
      out.write("                 html += '<div class=\"card-body p-4\">';\r\n");
      out.write("                 html += '<div class=\"text-center\">';\r\n");
      out.write("                 html += '<h5 class=\"fw-bolder\">'+item.board_title+'</h5>';\r\n");
      out.write("                 html += '지역 : '+item.board_address+\"<br>\";\r\n");
      out.write("                 html += '작성자 : '+item.user_name+\"<br>\";\r\n");
      out.write("                 html += '추천수 : '+item.board_recommend;\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                 html += '</div>';\r\n");
      out.write("                 html += '</div>';\r\n");
      out.write("                 html += '<div class=\"card-footer p-4 pt-0 border-top-0 bg-transparent\">';\r\n");
      out.write("                 html += '<div class=\"text-center\"><a class=\"btn btn-outline-dark mt-auto\" href=\"view?board_idx=' + item.board_idx + '&user_name=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.user_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">신청</a></div>';\r\n");
      out.write("                 \r\n");
      out.write("                 html += '</div>';\r\n");
      out.write("                 html += '</div>';\r\n");
      out.write("                 html += '</div>';\r\n");
      out.write("        	 });\r\n");
      out.write("\r\n");
      out.write("          // 생성한 HTML 코드를 원하는 곳에 삽입\r\n");
      out.write("             $('#boardid').html(html);\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("//페이지 버튼 생성 함수\r\n");
      out.write("	function createPageButton(pageNum) {\r\n");
      out.write("		var pageLink = $(\"<li class='page-link os'></li>\").text(pageNum).attr('value', pageNum);\r\n");
      out.write("			if (pageNum == nowPage ) {\r\n");
      out.write("	   			 pageLink.css('color', 'red');\r\n");
      out.write("	  			}\r\n");
      out.write("	    var pageBtn = $(\"<li class='page-item'></li>\").append(pageLink);\r\n");
      out.write("	    \r\n");
      out.write("  		return pageBtn;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 페이지 버튼 보이기/숨기기 처리 함수\r\n");
      out.write("    function setPageButtonVisibility(start, end) {\r\n");
      out.write(" 	pagination.find('.page-item').remove();\r\n");
      out.write("		if (pageCount > 1) {\r\n");
      out.write("		    for (var i = start; i <= Math.min(end, 10); i++) {\r\n");
      out.write("		      pagination.find('.page-item:nth-child(' + i + ')').show();\r\n");
      out.write("		    }\r\n");
      out.write("		  }\r\n");
      out.write("		// 페이지 버튼 추가\r\n");
      out.write("		if(pageCount > 1) {\r\n");
      out.write("			pagination.empty();\r\n");
      out.write("			pagination.append(prevBtn);\r\n");
      out.write("     	for (var i = 1; i <= Math.min(end, 10)  ; i++) {\r\n");
      out.write("      	 pagination.append(createPageButton(i));\r\n");
      out.write("      		//pagetotcount++;\r\n");
      out.write("   		  }\r\n");
      out.write("     	\r\n");
      out.write("     	 pagination.append(nextBtn);\r\n");
      out.write("		}else{\r\n");
      out.write("			pagination.empty()\r\n");
      out.write("			pagination.append(createPageButton(1));\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/JUS/board.jsp(21,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.user_power == 'x'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <!-- user -->\r\n");
          out.write("				<a href=\"info\" ><img src=\"/resources/css/img/user.png\" alt=\"\" style=\"width: 10%;\"></a>\r\n");
          out.write("				");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.user_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("				<a href=\"index\" ><img src=\"/resources/css/img/logout.png\" alt=\"\" style=\"width: 10%;\"></a>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/JUS/board.jsp(26,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.user_power == 'o'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write(" <!-- admin -->\r\n");
          out.write("				<a href=\"info\" >관리자</a>\r\n");
          out.write("				<a href=\"index\" ><img src=\"/resources/css/img/logout.png\" alt=\"\" style=\"width: 10%;\"></a>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/JUS/board.jsp(30,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                <div >\r\n");
          out.write("				<a href=\"login\" style=\"margin: 10px;\">로그인</a>\r\n");
          out.write("                <a href=\"join\">회원가입</a>   \r\n");
          out.write("             	</div>\r\n");
          out.write("        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /WEB-INF/views/JUS/board.jsp(51,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty user}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("            	<a href=\"writing\" style=\"color: white;\">글쓰기</a>\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
